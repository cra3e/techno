{"version":3,"sources":["logo.svg","components/Input.jsx","components/Output.js","components/Tabs.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","darkTheme","createTheme","palette","mode","Input","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","_useState","useState","_useState2","_slicedToArray","_useContext","useContext","AppContext","inputFields","setInputFields","setImage1","image1","handleInputChange","e","_e$target","target","id","value","prevState","_objectSpread","_defineProperty","_useState3","_useState4","mountOrNot","setMountOrNot","_useState5","_useState6","React","createElement","ThemeProvider","theme","CssBaseline","FormControl","fullWidth","TextField","label","variant","number","onChange","name","costumer","RadioGroup","aria-labelledby","row","mnt","FormControlLabel","control","Radio","checked","address","manager","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DatePicker","dayjs","dateOne","date","$d","renderInput","params","Object","assign","work","folder","htmlFor","Button","component","type","URL","createObjectURL","files","style","display","Output","today","Date","month","getMonth","formattedDate","concat","getDate","getFullYear","toLocaleDateString","src","alt","height","TabPanel","props","children","index","hidden","Typography","TabsOne","setValue","Tabs","event","newValue","centered","Tab","createContext","App","field1","field2","field3","Provider","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.858c2624.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, {useContext} from 'react';\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { useFormik } from \"formik\";\r\n//import { Neon } from \"./Neon\";\r\n//import { Vyveska } from \"./Viveska\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Autocomplete,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@mui/material\";\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport {useState} from \"react\";\r\nimport 'dayjs/locale/ru';\r\nimport dayjs from \"dayjs\";\r\nimport {AppContext} from \"../App\";\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: \"dark\",\r\n  }\r\n});\r\n\r\nfunction Input() {\r\n  const formik = useFormik({\r\n    initialValues: {},\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n    const [value, setValue] = useState(null);\r\n\r\n    const { inputFields, setInputFields, image1, setImage1 } = useContext(AppContext);\r\n\r\n    //добавление в контекст\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setInputFields((prevState) => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }));\r\n        debugger\r\n    };\r\n//добавление даты в контекст\r\n    const handleDateChange = (date) => {\r\n        setInputFields(prevState => ({\r\n            ...prevState,\r\n            dateOne: date.$d\r\n        }));\r\n        debugger;\r\n    };\r\n\r\n    //состояние монтажа\r\n    const [mountOrNot, setMountOrNot] = useState('');\r\n    const handleMountOrNotChange = (mnt) => {\r\n        setMountOrNot(mnt.target.value);\r\n    };\r\n\r\n    //добавление картинки\r\n    //const [image1, setImage1] = useState();\r\n    function addImage1(e) {\r\n        setImage1(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n    const [image2, setImage2] = useState();\r\n    function addImage2(e) {\r\n        setImage2(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n  return (\r\n    //<form onSubmit={handleInputChange} width='80%'>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <CssBaseline />\r\n        <br />\r\n        <FormControl fullWidth>\r\n            {/* тут збс сделал*/}\r\n<TextField id=\"number\" label=\"Номер техноложки\" variant=\"outlined\" value={inputFields.number} onChange={handleInputChange}/><br/>\r\n<TextField id=\"name\" label=\"Название\" variant=\"outlined\" value={inputFields.name} onChange={handleInputChange}/><br/>\r\n<TextField id=\"costumer\" label=\"Заказчик\" variant=\"outlined\" value={inputFields.costumer} onChange={handleInputChange}/><br/>\r\n\r\n          <center>\r\n              <form onChange={handleInputChange}>\r\n              <RadioGroup\r\n              aria-labelledby=\"type-label\"\r\n              row\r\n              value={mountOrNot}\r\n              onChange={handleMountOrNotChange}>\r\n            <FormControlLabel\r\n                value=\"mount\"\r\n                control={<Radio id='mountOrNot'/>}\r\n                checked={inputFields.mountOrNot === \"mount\"}\r\n                label=\"Монтаж\"/>\r\n            <FormControlLabel\r\n                value=\"send\"\r\n                control={<Radio id='mountOrNot'/>}\r\n                checked={inputFields.mountOrNot === \"send\"}\r\n                label=\"Отправка\"/>\r\n            <FormControlLabel\r\n                value=\"self\"\r\n                control={<Radio id='mountOrNot'/>}\r\n                checked={inputFields.mountOrNot === \"self\"}\r\n                label=\"Самовывоз\"\r\n            />\r\n          </RadioGroup>\r\n              </form>\r\n          </center>\r\n\r\n          {inputFields.mountOrNot === \"mount\" ? (\r\n              <TextField id=\"address\" label=\"Монтаж по адресу\" variant=\"outlined\" value={inputFields.address} onChange={handleInputChange}/>\r\n          ) : inputFields.mountOrNot === \"send\" ? (\r\n              <TextField id=\"address\" label=\"Отправить по адресу\" variant=\"outlined\" value={inputFields.address} onChange={handleInputChange}/>\r\n          ) : inputFields.mountOrNot === \"self\" ? (\r\n              \"Заказчик заберет сам\"\r\n          ) : (\r\n              \"Выберите монтаж / отправка / самовывоз\"\r\n          )}\r\n            <br/>\r\n          <TextField id=\"manager\" label=\"Менеджер\" variant=\"outlined\" value={inputFields.manager} onChange={handleInputChange}/><br/>\r\n\r\n            {/*добавление даты*/}\r\n            <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ru\">\r\n                <DatePicker\r\n                    label=\"Дата составления заявки\"\r\n                    id=\"dateOne\"\r\n                    value={dayjs(inputFields.dateOne)}\r\n                    onChange={handleDateChange}\r\n                    renderInput={(params) => <TextField {...params} id=\"dateOne-input\" />}\r\n                />\r\n            </LocalizationProvider><br/>\r\n\r\n            {/*ещё какие то параметры*/}\r\n            <TextField id=\"work\" label=\"Фронт работ\" variant=\"outlined\" value={inputFields.work} onChange={handleInputChange}/><br/>\r\n            <TextField id=\"folder\" label=\"Путь к папке\" variant=\"outlined\" value={inputFields.folder} onChange={handleInputChange}/><br/>\r\n\r\n            {/*кнопка добавления изображения 1*/}\r\n            <label htmlFor=\"file-upload\">\r\n                <Button variant=\"contained\" component=\"span\">\r\n                    Загрузить файл с габаритами\r\n                </Button>\r\n            </label>\r\n            <input\r\n                id=\"file-upload\"\r\n                type=\"file\"\r\n                onChange={addImage1}\r\n                style={{ display: \"none\" }}\r\n            />\r\n        </FormControl>\r\n        </ThemeProvider>\r\n    //</form>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useContext } from 'react';\r\nimport {AppContext} from \"../App\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nconst Output = () => {\r\n    const { inputFields, image1 } = useContext(AppContext);\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const formattedDate = `${today.getDate()}.${month<10?'0'+month:month}.${today.getFullYear()}`;\r\n\r\n    return (\r\n        <div>\r\n            <p>Номер: <b>{inputFields.number} </b></p>\r\n            <p>Название: {inputFields.name}</p>\r\n            <p>Заказчик: {inputFields.costumer}</p>\r\n            {inputFields.dateOne\r\n                ? <p>Дата составления заявки: {inputFields.dateOne.toLocaleDateString()}</p>\r\n                : <p>Дата составления заявки: {formattedDate}</p>}\r\n            <p>Менеджер проекта: {inputFields.manager}</p>\r\n            {inputFields.mountOrNot === \"mount\" ? (\r\n                <p>Монтаж по адресу: {inputFields.address}</p>\r\n            ) : inputFields.mountOrNot === \"send\" ? (\r\n                <p>Отправить по адресу: {inputFields.address}</p>\r\n            ) : inputFields.mountOrNot === \"self\" ? (\r\n                \"Заказчик заберет сам\"\r\n            ) : (\r\n                \"Непонятно что с ней потом делать\"\r\n            )}\r\n            <p>Фронт работ: {inputFields.work}</p>\r\n            <p>Путь к папке: {inputFields.folder}</p>\r\n            {image1 && <img src={image1} alt=\"Габариты\" height='500px'/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Output;\r\n","import React, { useState } from 'react';\r\nimport { Tabs, Tab, Typography } from '@mui/material';\r\nimport Input from \"./Input\";\r\nimport Output from \"./Output\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n        <div hidden={value !== index}>\r\n            {value === index && (\r\n                <Typography component=\"div\">{children}</Typography>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function TabsOne() {\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <Tabs value={value} onChange={handleChange} centered={true}>\r\n                <Tab label=\"ВВОД ДАННЫХ\" />\r\n                <Tab label=\"ВЫВОД ДАННЫХ\" />\r\n                <Tab label=\"КОПИРАЙТ\" />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0}>\r\n                <Input/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Output/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                (c) Eugene Christiani 2023\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React, {createContext, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Input from \"./components/Input\";\nimport Tabs from \"./components/Tabs\";\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [inputFields, setInputFields] = useState({ field1: '', field2: '', field3: '' , mountOrNot: ''});\n    const [image1, setImage1] = useState(null);\n\n  return (\n      <AppContext.Provider value={{ inputFields, setInputFields, image1, setImage1 }}>\n        <Tabs/>\n      </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}