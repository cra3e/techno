{"version":3,"sources":["components/img/loading-loading-forever.gif","components/Input.jsx","components/Output.js","components/Exporter2.js","components/ImgUploader.js","components/Tabs.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","darkTheme","createTheme","palette","mode","Input","_useContext","useContext","AppContext","inputFields","setInputFields","handleInputChange","image1","setImage1","e","_e$target","target","id","value","prevState","_objectSpread","_defineProperty","_useState","useState","_useState2","_slicedToArray","mountOrNot","setMountOrNot","withStyles","root","width","boxShadow","textTransform","padding","border","lineHeight","backgroundColor","borderColor","&:hover","&:active","&:focus","Button","React","createElement","ThemeProvider","theme","CssBaseline","FormControl","fullWidth","TextField","label","variant","number","onChange","manager","costumer","contact","folder","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DatePicker","dayjs","dateOne","date","$d","renderInput","params","Object","assign","dateTwo","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","aria-controls","Typography","AccordionDetails","RadioGroup","aria-labelledby","row","colorFace","FormControlLabel","control","Radio","checked","disabled","colorBoard","heightBoard","colorFrame","mnt","address","component","onClick","addressToAPI","axios","get","geocode","apikey","format","then","response","coords","data","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","mapImageUrl","mapImage","catch","error","console","src","alt","Output","today","Date","month","getMonth","formattedDate","concat","getDate","getFullYear","name","toLocaleDateString","work","height","Exporter","url","setUrl","dataFromContext","_useState3","_useState4","blob64","setBlob64","useEffect","fetch","blob","reader","FileReader","onloadend","base64data","result","readAsDataURL","log","LightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","colorBoardLight","colorFrameLight","colorFrameDark","docDefinition","pageSize","pageOrientation","pageMargins","content","svg","alignment","text","columnGap","columns","bold","image","margin","pictures","defaultStyle","font","fontSize","URL","revokeObjectURL","pdfMake","createPdf","getBlob","createObjectURL","download","className","style","type","vfs","pdfFonts","fonts","NimbusSans","normal","italics","bolditalics","Montserrat","ImgUploader","setImages","_useFilePicker","useFilePicker","readAs","accept","multiple","limitFilesConfig","max","maxFileSize","imageSizeRestrictions","maxHeight","maxWidth","minHeight","minWidth","onFilesSuccessfulySelected","filesContent","images","newImages","map","fileContent","prevImages","setTimeout","_useFilePicker2","openFileSelector","_useFilePicker2$","loading","errors","load","length","imageSrc","index","key","indexToRemove","filter","_","color","size","TabPanel","props","children","hidden","TabsOne","setValue","Box","sx","mx","Tabs","event","newValue","centered","indicatorColor","textColor","Tab","Exporter2","createContext","App","Provider","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c6b889a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-loading-forever.ed2c4fc1.gif\";","import React, {useContext} from 'react';\r\nimport {ThemeProvider, createTheme} from \"@mui/material/styles\";\r\nimport {withStyles} from \"@mui/styles\"\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    RadioGroup,\r\n    Radio,\r\n    TextField, ButtonGroup, Accordion, AccordionSummary, Typography, AccordionDetails,\r\n} from \"@mui/material\";\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {useState} from \"react\";\r\nimport 'dayjs/locale/ru';\r\nimport dayjs from \"dayjs\";\r\nimport {AppContext} from \"../App\";\r\nimport axios from \"axios\";\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        mode: \"dark\",\r\n    }\r\n});\r\n\r\nfunction Input() {\r\n    const {inputFields, setInputFields, image1, setImage1} = useContext(AppContext);\r\n//добавление в контекст\r\n    const handleInputChange = (e) => {\r\n        const {id, value} = e.target;\r\n        setInputFields((prevState) => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }));\r\n    };\r\n\r\n//добавление даты в контекст\r\n    const handleDateOneChange = (date) => {\r\n        setInputFields(prevState => ({\r\n            ...prevState,\r\n            dateOne: date.$d\r\n        }));\r\n    };\r\n\r\n    const handleDateTwoChange = (date) => {\r\n        setInputFields(prevState => ({\r\n            ...prevState,\r\n            dateTwo: date.$d\r\n        }));\r\n    };\r\n\r\n//состояние монтажа\r\n    const [mountOrNot, setMountOrNot] = useState('');\r\n    const handleMountOrNotChange = (mnt) => {\r\n        setMountOrNot(mnt.target.value);\r\n    };\r\n\r\n//добавление картинки\r\n    function addImage1(e) {\r\n        setImage1(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n//Запрос координат и карты по ним\r\n    const getCoords = () => {\r\n        const addressToAPI = inputFields.address;\r\n        axios\r\n            .get('https://geocode-maps.yandex.ru/1.x/', {\r\n                params: {\r\n                    geocode: addressToAPI,\r\n                    apikey: '55c8816a-1c05-42cd-8e95-1066282e5eaf',\r\n                    format: 'json',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                const coords = response.data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(\" \");\r\n                const mapImageUrl = `http://static.maps.2gis.com/1.0?zoom=14&amp;size=600,350&amp;markers=` + coords[0] + `,` + coords[1];\r\n                setInputFields(prevState => ({\r\n                    ...prevState,\r\n                    mapImage: mapImageUrl\r\n                }));\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error getting coordinates:', error);\r\n            });\r\n    };\r\n\r\n    //Бутстрапова кнопка\r\n    const BootstrapButton = withStyles({\r\n        root: {\r\n            width: 100,\r\n            boxShadow: 'none',\r\n            textTransform: 'none',\r\n            padding: '6px 12px',\r\n            border: '1px solid',\r\n            lineHeight: 1.5,\r\n            backgroundColor: '#0063cc',\r\n            borderColor: '#0063cc',\r\n            '&:hover': {\r\n                backgroundColor: '#0069d9',\r\n                borderColor: '#0062cc',\r\n                boxShadow: 'none',\r\n            },\r\n            '&:active': {\r\n                boxShadow: 'none',\r\n                backgroundColor: '#0062cc',\r\n                borderColor: '#005cbf',\r\n            },\r\n            '&:focus': {\r\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n            },\r\n        },\r\n    })(Button);\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <CssBaseline/>\r\n            <br/>\r\n            <FormControl fullWidth>\r\n                {/* тут основные данные*/}\r\n                <TextField id=\"number\" label=\"Номер техноложки\" variant=\"outlined\" value={inputFields.number}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"manager\" label=\"Менеджер\" variant=\"outlined\" value={inputFields.manager}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"costumer\" label=\"Заказчик\" variant=\"outlined\" value={inputFields.costumer}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"contact\" label=\"Контакты\" variant=\"outlined\" value={inputFields.contact}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"folder\" label=\"Путь к папке\" variant=\"outlined\" value={inputFields.folder}\r\n                           onChange={handleInputChange}/><br/>\r\n                {/*добавление даты*/}\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ru\">\r\n                    <DatePicker\r\n                        label=\"Дата составления заявки\"\r\n                        id=\"dateOne\"\r\n                        value={dayjs(inputFields.dateOne)}\r\n                        onChange={handleDateOneChange}\r\n                        renderInput={(params) => <TextField {...params} id=\"dateOne-input\"/>}\r\n                    />\r\n                </LocalizationProvider><br/>\r\n\r\n                {/*добавление даты дедлайна*/}\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ru\">\r\n                    <DatePicker\r\n                        label=\"Дедлайн\"\r\n                        id=\"dateTwo\"\r\n                        value={dayjs(inputFields.dateTwo)}\r\n                        onChange={handleDateTwoChange}\r\n                        renderInput={(params) => <TextField {...params} id=\"dateTwo-input\"/>}\r\n                    />\r\n                </LocalizationProvider><br/>\r\n                {/*<TextField id=\"colorFrame\" label=\"Цвет рамы\" variant=\"outlined\" value={inputFields.colorFrame}\r\n                           onChange={handleInputChange}/><br/>*/}\r\n                {/*Тут выбираем цвет лица*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Цвет лицевой поверхности</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.colorFace}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"#000000\"\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace == \"#000000\"}\r\n                                label=\"Черный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#DDDDDD\"\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace == \"#DDDDDD\"}\r\n                                label=\"Белый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FF0000\"\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace == \"#FF0000\"}\r\n                                label=\"Красный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#008000\"\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace == \"#008000\"}\r\n                                label=\"Зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#00008f\"\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace == \"#00008f\"}\r\n                                label=\"Синий\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"another\"\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace == \"another\"}\r\n                                disabled={true}\r\n                                label=\"Другой\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Тут выбираем цвет борта*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Цвет борта</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.colorBoard}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"#000000\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.colorBoard == \"#000000\"}\r\n                                label=\"Черный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#DDDDDD\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.colorBoard == \"#DDDDDD\"}\r\n                                label=\"Белый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FF0000\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.colorBoard == \"#FF0000\"}\r\n                                label=\"Красный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#008000\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.colorBoard == \"#008000\"}\r\n                                label=\"Зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#00008f\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.colorBoard == \"#00008f\"}\r\n                                label=\"Синий\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"another\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.colorBoard == \"another\"}\r\n                                disabled={true}\r\n                                label=\"Другой\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Ширина борта*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Ширина борта</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.heightBoard}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"20 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"20 мм\"}\r\n                                label=\"20 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"40 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"40 мм\"}\r\n                                label=\"40 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"60 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"60 мм\"}\r\n                                label=\"60 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"80 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"80 мм\"}\r\n                                label=\"80 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"100 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"100 мм\"}\r\n                                label=\"100 мм\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"another\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.heightBoard == \"another\"}\r\n                                disabled={true}\r\n                                label=\"Другой\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Тут выбираем цвет рамы*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Цвет борта</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.colorFrame}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"#000000\"\r\n                                control={<Radio id='colorFrame'/>}\r\n                                checked={inputFields.colorFrame == \"#000000\"}\r\n                                label=\"Черный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#DDDDDD\"\r\n                                control={<Radio id='colorFrame'/>}\r\n                                checked={inputFields.colorFrame == \"#DDDDDD\"}\r\n                                label=\"Белый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FF0000\"\r\n                                control={<Radio id='colorFrame'/>}\r\n                                checked={inputFields.colorFrame == \"#FF0000\"}\r\n                                label=\"Красный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#008000\"\r\n                                control={<Radio id='colorFrame'/>}\r\n                                checked={inputFields.colorFrame == \"#008000\"}\r\n                                label=\"Зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#00008f\"\r\n                                control={<Radio id='colorFrame'/>}\r\n                                checked={inputFields.colorFrame == \"#00008f\"}\r\n                                label=\"Синий\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"another\"\r\n                                control={<Radio id='colorFrame'/>}\r\n                                checked={inputFields.colorFrame == \"another\"}\r\n                                disabled={true}\r\n                                label=\"Другой\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion><br/>\r\n\r\n                {/*Монтаж или xxt djj,ot*/}\r\n                <center>\r\n                    <form onChange={handleInputChange}>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={mountOrNot}\r\n                            onChange={handleMountOrNotChange}>\r\n                            <FormControlLabel\r\n                                value=\"mount\"\r\n                                control={<Radio id='mountOrNot'/>}\r\n                                checked={inputFields.mountOrNot == \"mount\"}\r\n                                label=\"Монтаж\"/>\r\n                            <FormControlLabel\r\n                                value=\"send\"\r\n                                control={<Radio id='mountOrNot'/>}\r\n                                checked={inputFields.mountOrNot == \"send\"}\r\n                                label=\"Отправка\"/>\r\n                            <FormControlLabel\r\n                                value=\"self\"\r\n                                control={<Radio id='mountOrNot'/>}\r\n                                checked={inputFields.mountOrNot == \"self\"}\r\n                                label=\"Самовывоз\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </form>\r\n                </center>\r\n\r\n                {inputFields.mountOrNot == \"mount\" ? (\r\n                    <div>\r\n                        <TextField id=\"address\" label=\"Монтаж по адресу\" variant=\"outlined\" value={inputFields.address}\r\n                                   onChange={handleInputChange} fullWidth={true}/>\r\n                        <br/>\r\n                        <Button variant=\"contained\" component=\"span\" fullWidth={true} onClick={getCoords}>\r\n                            ПОКАЗАТЬ КАРТУ\r\n                        </Button>\r\n                        <br/>\r\n                        <div>\r\n                            <center>{inputFields.mapImage && <img src={inputFields.mapImage} alt=\"Map\"/>}</center>\r\n                        </div>\r\n                    </div>\r\n                ) : inputFields.mountOrNot == \"send\" ? (\r\n                    <TextField id=\"address\" label=\"Отправить по адресу\" variant=\"outlined\" value={inputFields.address}\r\n                               onChange={handleInputChange}/>\r\n                ) : inputFields.mountOrNot == \"self\" ? (\r\n                    \"Заказчик заберет сам\"\r\n                ) : (\r\n                    \"Выберите монтаж / отправка / самовывоз\"\r\n                )}\r\n\r\n                <br/>\r\n\r\n\r\n\r\n                {/*кнопка добавления изображения\r\n                <label htmlFor=\"file-upload\">\r\n                    <Button variant=\"contained\" component=\"span\" fullWidth={true}>\r\n                        Загрузить файл с габаритами\r\n                    </Button>\r\n                </label>\r\n                <input\r\n                    id=\"file-upload\"\r\n                    type=\"file\"\r\n                    onChange={addImage1}\r\n                    style={{display: \"none\"}}\r\n                />\r\n                <div>\r\n                    <center>{image1 && <img src={image1} alt=\"Map\"/>}</center>\r\n                </div>*/}\r\n            </FormControl>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useContext } from 'react';\r\nimport {AppContext} from \"../App\";\r\n\r\nconst Output = () => {\r\n    const { inputFields, image1 } = useContext(AppContext);\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const formattedDate = `${today.getDate()}.${month<10?'0'+month:month}.${today.getFullYear()}`;\r\n\r\n    return (\r\n        <div>\r\n            <p>Номер: <b>{inputFields.number} </b></p>\r\n            <p>Название: {inputFields.name}</p>\r\n            <p>Заказчик: {inputFields.costumer}</p>\r\n            {inputFields.dateOne\r\n                ? <p>Дата составления заявки: {inputFields.dateOne.toLocaleDateString()}</p>\r\n                : <p>Дата составления заявки: {formattedDate}</p>}\r\n            {inputFields.dateTwo\r\n                ? <p>Дедлайн: {inputFields.dateTwo.toLocaleDateString()}</p>\r\n                : <p>Дедлайн: не определен</p>}\r\n            <p>Менеджер проекта: {inputFields.manager}</p>\r\n            {inputFields.mountOrNot === \"mount\" ? (\r\n                <div>\r\n                    <p>Монтаж по адресу: {inputFields.address}</p>\r\n                    <center>{inputFields.mapImage && <img src={inputFields.mapImage} alt=\"Map\"/>}</center>\r\n                </div>\r\n            ) : inputFields.mountOrNot === \"send\" ? (\r\n                <p>Отправить по адресу: {inputFields.address}</p>\r\n            ) : inputFields.mountOrNot === \"self\" ? (\r\n                \"Заказчик заберет сам\"\r\n            ) : (\r\n                \"Непонятно что с ней потом делать\"\r\n            )}\r\n            <p>Фронт работ: {inputFields.work}</p>\r\n            <p>Путь к папке: {inputFields.folder}</p>\r\n            {image1 && <img src={image1} alt=\"Габариты\" height='500px'/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Output;\r\n","import React, {useContext} from 'react';\r\nimport './styles.css'\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {AppContext} from \"../App\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\r\nimport {Button} from \"@mui/material\";\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\npdfMake.fonts = {\r\n    NimbusSans: {\r\n        normal: \"NimbusSanL-Reg.otf\",\r\n        bold: \"NimbusSanL-Bol.otf\",\r\n        italics: \"NimbusSanL-RegIta.otf\",\r\n        bolditalics: \"NimbusSanL-BolIta.otf\"\r\n    },\r\n    Montserrat: {\r\n        normal: \"Montserrat-Regular.ttf\",\r\n        bold: \"Montserrat-Bold.ttf\",\r\n        italics: \"Montserrat-Italic.ttf\"\r\n    }\r\n};\r\n\r\nexport default function Exporter() {\r\n    const [url, setUrl] = useState(null);\r\n    const dataFromContext = useContext(AppContext);\r\n    const [blob64, setBlob64] = useState(\"\");\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const formattedDate = `${today.getDate()}.${month<10?'0'+month:month}.${today.getFullYear()}`;\r\n    //const [image1, setImage1] = useState(\"\");\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(dataFromContext.inputFields.mapImage)\r\n            .then((response) => response.blob())\r\n            .then((blob) => {\r\n                const reader = new FileReader();\r\n                reader.onloadend = () => {\r\n                    const base64data = reader.result;\r\n                    setBlob64(base64data);\r\n                };\r\n                reader.readAsDataURL(blob);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    const dataTyper = (data) => {\r\n        return data.slice(0, 14);\r\n    }\r\n\r\n    /*useEffect(() => {\r\n        fetch(dataFromContext.image1)\r\n            .then((response) => response.blob())\r\n            .then((blob) => {\r\n                const reader = new FileReader();\r\n                reader.onloadend = () => {\r\n                    const base64data = reader.result;\r\n                    setImage1(base64data);\r\n                };\r\n                reader.readAsDataURL(blob);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);*/\r\n\r\n    //Осветлительно-затемняющий функционал\r\n    function LightenDarkenColor(col, amt) {\r\n        var usePound = false;\r\n        if (col[0] == \"#\") {\r\n            col = col.slice(1);\r\n            usePound = true;\r\n        }\r\n        let num = parseInt(col, 16);\r\n        let r = (num >> 16) + amt;\r\n        if (r > 255) r = 255;\r\n        else if  (r < 0) r = 0;\r\n        let b = ((num >> 8) & 0x00FF) + amt;\r\n        if (b > 255) b = 255;\r\n        else if  (b < 0) b = 0;\r\n        let g = (num & 0x0000FF) + amt;\r\n        if (g > 255) g = 255;\r\n        else if (g < 0) g = 0;\r\n        return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n    }\r\n\r\n    let colorBoard = dataFromContext.inputFields.colorBoard ? dataFromContext.inputFields.colorBoard : '#000000';\r\n    let colorBoardLight = LightenDarkenColor(colorBoard, 70);\r\n    let colorFrame = dataFromContext.inputFields.colorFrame ? dataFromContext.inputFields.colorFrame : '#555555';\r\n    let colorFrameLight = LightenDarkenColor(colorFrame, 70);\r\n    let colorFrameDark = LightenDarkenColor(colorFrame, -70);\r\n    let colorFace = dataFromContext.inputFields.colorFace ? dataFromContext.inputFields.colorFace : '#FFFFFF';\r\n\r\n    const docDefinition = {\r\n        pageSize: \"A4\",\r\n        pageOrientation: \"portrait\",\r\n        pageMargins: [40, 20, 40, 60],\r\n        content: [\r\n            //Логотип\r\n            {\r\n                svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" height=\"26\" viewBox=\"0 0 150 26\" fill=\"none\">\\n' +\r\n                    '<path d=\"M11.8516 26H0.267578V0.300781H11.8516V4.43164H5.04883V10.5488H11.3594V14.6973H5.04883V21.8164H11.8516V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M30.3613 26H25.3867L21.7129 16.7891L18.3027 26H13.3281L19.1992 12.6406L13.7676 0.300781H18.584L21.9766 8.75586L24.9121 0.300781H29.9219L24.4902 12.8516L30.3613 26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M40.5391 26H35.7754V4.50195H30.8535V0.300781H45.4609V4.50195H40.5391V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M59.8047 26H48.2207V0.300781H59.8047V4.43164H53.002V10.5488H59.3125V14.6973H53.002V21.8164H59.8047V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M68.3301 15.998V26H63.5488V0.300781H69.8066C72.4551 0.300781 74.4062 0.927734 75.6602 2.18164C76.9258 3.43555 77.5586 5.35156 77.5586 7.92969C77.5586 11.1758 76.4629 13.4434 74.2715 14.7324L79.2109 26H74.0957L70.0352 15.998H68.3301ZM68.3301 11.8848H69.5605C70.6855 11.8848 71.4941 11.5684 71.9863 10.9355C72.4785 10.291 72.7246 9.33594 72.7246 8.07031C72.7246 6.75781 72.4609 5.82617 71.9336 5.27539C71.418 4.71289 70.6152 4.43164 69.5254 4.43164H68.3301V11.8848Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M99.5488 26H93.7129L85.7676 7.38477H85.5391C85.832 8.80273 85.9785 10.3262 85.9785 11.9551V26H81.5488V0.300781H87.4199L95.2949 18.7227H95.4883C95.2656 17.4922 95.1543 16.0273 95.1543 14.3281V0.300781H99.5488V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M116.248 26L114.771 19.5137H108.074L106.598 26H101.816L108.18 0.195312H114.666L121.047 26H116.248ZM113.875 15.2773L112.504 9.30078C112.422 8.9375 112.234 8.0293 111.941 6.57617C111.66 5.11133 111.49 4.13281 111.432 3.64062C111.279 4.64844 111.086 5.76172 110.852 6.98047C110.617 8.1875 110.008 10.9531 109.023 15.2773H113.875Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M123.314 26V0.300781H128.096V21.8164H134.723V26H123.314Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M137.799 26V0.300781H142.58V21.8164H149.207V26H137.799Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '</svg>', alignment: 'left'\r\n            },\r\n            {text: '\\n'},\r\n            //Блок с основной информацией и картой\r\n            {\r\n                //alignment: 'justify',\r\n                columnGap: 0,\r\n                columns: [\r\n                    {\r\n                        //Номер\r\n                        text:\r\n                        [dataFromContext.inputFields.number && {text:\r\n                                [`Номер: `, {text: `${dataFromContext.inputFields.number}`, bold: true}]},'\\n',\r\n                            //Менеджер\r\n                            dataFromContext.inputFields.manager && {text:\r\n                                    [`Менеджер: `, {text: `${dataFromContext.inputFields.manager}`, bold: true}]},'\\n',\r\n                        //Заказчик\r\n                        dataFromContext.inputFields.costumer && {text:\r\n                                [`Заказчик: `, {text: `${dataFromContext.inputFields.costumer}`, bold: true}]},'\\n',\r\n                        //Контакт\r\n                        dataFromContext.inputFields.contact && {text:\r\n                                [`Контакт: `, {text: `${dataFromContext.inputFields.contact}`, bold: true}]},'\\n',\r\n                            //Путь к папке\r\n                            dataFromContext.inputFields.folder && {text:\r\n                                    [`Путь к папке: `, {text: `${dataFromContext.inputFields.folder}`, bold: true}]},'\\n',\r\n                        //Дата составления заявки\r\n                            dataFromContext.inputFields.dateOne\r\n                            ? {text: [`Дата составления заявки: `, {text: `${dataFromContext.inputFields.dateOne.toLocaleDateString()}`, bold: true}]}\r\n                            : {text: [`Дата составления заявки: `, {text: `${formattedDate}`, bold: true}]},'\\n',\r\n                        //Дэдлайн\r\n                            dataFromContext.inputFields.dateTwo\r\n                            ? {text: [`Дэдлайн: `, {text: `${dataFromContext.inputFields.dateTwo.toLocaleDateString()}`, bold: true}]}\r\n                            : {text: [`Дэдлайн: `, {text: `не определен`, bold: true}]},'\\n',\r\n                        //Адрес\r\n                        dataFromContext.inputFields.address && {text:\r\n                                [`Адрес: `, {text: `${dataFromContext.inputFields.address}`, bold: true}]}]\r\n                    },\r\n                        //Карта\r\n                        dataTyper(blob64) == \"data:text/html\" ? '' : {image: blob64, width: 300 , alignment: 'center'},\r\n                ]\r\n            },\r\n            //Разделитель\r\n            {\r\n                svg: '<svg width=\"515\" height=\"3\" xmlns=\"http://www.w3.org/2000/svg\">\\n' +\r\n                '<rect width=\"515\" height=\"3\" fill=\"#0038E6\"/>\\n' +\r\n                '</svg>\\n', margin: [0,0,0,0]\r\n            },\r\n            '\\n',\r\n            //Блок описания вывески\r\n            {\r\n                alignment: 'justify',\r\n                columns: [\r\n                    //Превью буквы\r\n                    {\r\n                        svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" width=\"150px\" height=\"150px\" version=\"1.1\" style=\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd\" viewBox=\"0 0 303.36 303.36\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xodm=\"http://www.corel.com/coreldraw/odm/2003\">\\n'+\r\n                            '<defs>\\n'+\r\n                            '<style type=\"text/css\">\\n'+\r\n                            '<![CDATA[\\n'+\r\n                            '.str0 {stroke:#2B2A29;stroke-width:0.76;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22.9256}\\n'+\r\n                            ']]>\\n'+\r\n                            '</style>\\n'+\r\n                            '</defs>\\n'+\r\n                            '<g id=\"Layer_x0020_1\">\\n'+\r\n                            '<metadata id=\"CorelCorpID_0Corel-Layer\"/>\\n'+\r\n                            '<g id=\"_2375251128288\">\\n'+\r\n                            `<polygon fill='${colorFrameLight}' class=\"str0\" points=\"0.38,250.18 296.34,213.52 302.98,217.64 7.02,254.3 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,265.09 7.02,264.27 7.02,269.21 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,250.18 7.02,254.3 7.02,264.27 0.38,265.09 \"/>\\n`+\r\n                            `<polygon fill='${colorFrame}' class=\"str0\" points=\"7.02,254.3 302.98,217.64 302.98,232.55 7.02,269.21 \"/>\\n`+\r\n                            `<polygon fill='${colorFrame}' class=\"str0\" points=\"7.02,59.55 302.98,22.89 302.98,37.8 7.02,74.47 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameLight}' class=\"str0\" points=\"0.38,55.43 296.34,18.77 302.98,22.89 7.02,59.55 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,70.34 7.02,69.52 7.02,74.47 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,55.43 7.02,59.55 7.02,69.52 0.38,70.34 \"/>\\n`+\r\n                            `<polygon fill='${colorBoard}' class=\"str0\" points=\"213.19,214.9 190.74,198.22 212.38,261.15 235.27,279.12 \"/>\\n`+\r\n                            `<polygon fill='${colorBoardLight}' class=\"str0\" points=\"208.28,13.02 185.93,0.38 104.98,10.41 125.67,23.25 \"/>\\n`+\r\n                            `<polygon fill='${colorBoard}' class=\"str0\" points=\"125.67,23.25 104.98,10.41 23.62,284.54 42.66,302.98 \"/>\\n`+\r\n                            `<polygon fill='${colorBoard}' class=\"str0\" points=\"167.38,64.88 145.85,51.2 178.32,156.27 200.51,172.1 \"/>\\n`+\r\n                            `<polygon fill='${colorBoardLight}' class=\"str0\" points=\"200.51,172.1 178.32,156.27 114.19,164.22 135.08,180.2 \"/>\\n`+\r\n                            `<path fill='${colorFace}' class=\"str0\" d=\"M101.95 295.63l20.86 -69.54 90.37 -11.19 22.09 64.22 58.07 -7.19 -85.06 -258.91 -82.61 10.23 -83.01 279.73 59.29 -7.35zm65.43 -230.75l33.13 107.22 -65.43 8.1 32.3 -115.32z\"/>\\n`+\r\n                            '</g>\\n'+\r\n                            '</g>\\n'+\r\n                            '</svg>',\r\n                        alignment: 'center'\r\n                    },\r\n                    //Характеристики вывески\r\n                    {\r\n                        text:\r\n                                [\r\n                                //Цвет лица\r\n                                dataFromContext.inputFields.colorFace && {text:\r\n                                    [`Цвет лица: `, {text: `${dataFromContext.inputFields.colorFace}`, bold: true}]},'\\n',\r\n                                //Ширина борта\r\n                                dataFromContext.inputFields.heightBoard && {text:\r\n                                    [`Ширина борта: `, {text: `${dataFromContext.inputFields.heightBoard}`, bold: true}]},'\\n',\r\n                                //Цвет борта\r\n                                dataFromContext.inputFields.colorBoard && {text:\r\n                                     [`Цвет борта: `, {text: `${dataFromContext.inputFields.colorBoard}`, bold: true}]},'\\n',\r\n                                //Цвет рамы\r\n                                dataFromContext.inputFields.colorFrame && {text:\r\n                                      [`Цвет рамы: `, {text: `${dataFromContext.inputFields.colorFrame}`, bold: true}]},'\\n',\r\n                                ]\r\n                    }\r\n                ]\r\n            },\r\n            '\\n',\r\n            //картника с привязкой или визуализацией\r\n            {text: `Габариты, визуализация:`, bold: true},\r\n            dataFromContext.inputFields.pictures && {image:\r\n                dataFromContext.inputFields.pictures, width: 350 , alignment: 'center'},\r\n        ],\r\n        defaultStyle: {\r\n            font: \"Montserrat\",\r\n            fontSize: 10,\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (url !== null) {\r\n                URL.revokeObjectURL(url);\r\n            }\r\n        };\r\n    }, [url]);\r\n\r\n    const create = () => {\r\n        const pdfDocGenerator = pdfMake.createPdf(docDefinition);\r\n        pdfDocGenerator.getBlob((blob) => {\r\n            const url = URL.createObjectURL(blob);\r\n            setUrl(url);\r\n        });\r\n    };\r\n\r\n    const download = () => {\r\n        const pdfDocGenerator = pdfMake.createPdf(docDefinition);\r\n        pdfDocGenerator.download();\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <CssBaseline />\r\n            <br />\r\n            <Button\r\n                onClick={create}\r\n                variant='contained'\r\n                component='span'\r\n                fullWidth={true}\r\n            >\r\n                ПРЕДПРОСМОТР\r\n            </Button>\r\n            <br/>\r\n            <Button\r\n                onClick={download}\r\n                variant='contained'\r\n                component='span'\r\n                fullWidth={true}\r\n            >\r\n                СКАЧАТЬ\r\n            </Button>\r\n            <br/>\r\n        <div className=\"App\">\r\n            {url && (\r\n                <div>\r\n                    <object\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100vh\"\r\n                        }}\r\n                        data={url}\r\n                        type=\"application/pdf\"\r\n                    >\r\n                        <embed src={url} type=\"application/pdf\" />\r\n                    </object>\r\n                </div>\r\n            )}\r\n        </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\n// Hook\r\nfunction usePrevious(value) {\r\n    // The ref object is a generic container whose current property is mutable ...\r\n    // ... and can hold any value, similar to an instance property on a class\r\n    const ref = useRef();\r\n\r\n    // Store current value in ref\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n\r\n    // Return previous value (happens before update in useEffect above)\r\n    return ref.current;\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useFilePicker } from 'use-file-picker';\r\nimport { AppContext } from '../App';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { Button } from '@mui/material';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport load from './img/loading-loading-forever.gif';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n    },\r\n});\r\nexport default function ImgUploader() {\r\n    const { inputFields, setInputFields } = useContext(AppContext);\r\n\r\n    const [images, setImages] = useState([]);\r\n\r\n    const handleInputChange = (images) => {\r\n        const newImages = images.filesContent.map((fileContent) => fileContent.content);\r\n        setImages((prevImages) => prevImages.concat(newImages));\r\n        setInputFields((prevState) => ({ ...prevState, pictures: newImages }));\r\n        setTimeout(() => {\r\n            console.log(inputFields);\r\n        }, 1000);\r\n        debugger;\r\n    };\r\n\r\n    const handleImageRemove = (indexToRemove) => {\r\n        setImages((prevImages) => prevImages.filter((_, index) => index !== indexToRemove));\r\n    };\r\n\r\n    const [openFileSelector, { filesContent, loading, errors }] = useFilePicker({\r\n        readAs: 'DataURL',\r\n        accept: 'image/*',\r\n        multiple: true,\r\n        limitFilesConfig: { max: 2 },\r\n        maxFileSize: 50,\r\n        imageSizeRestrictions: {\r\n            maxHeight: 3000, // in pixels\r\n            maxWidth: 3000,\r\n            minHeight: 100,\r\n            minWidth: 100,\r\n        },\r\n        onFilesSuccessfulySelected: (filesContent) => handleInputChange(filesContent),\r\n    });\r\n\r\n    if (loading) {\r\n        return (\r\n            <ThemeProvider theme={darkTheme}>\r\n                <CssBaseline />\r\n                <center>\r\n                    <img src={load} height={200} alt='loading' />\r\n                </center>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n\r\n    if (errors.length) {\r\n        return <div>{errors}</div>;\r\n    }\r\n\r\n/*    const handleInputChange = (e) => {\r\n        debugger\r\n        console.log(e)\r\n        console.log(e.filesContent[0])\r\n        //const {index, imageSrc} = e.target;\r\n        setInputFields((prevState) => ({\r\n            ...prevState,\r\n            ['image' + [e.filesContent.length]]: e.filesContent[0].content\r\n        }));\r\n        console.log(e.filesContent.length)\r\n        console.log(e.filesContent[0].content)\r\n    };*/\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <CssBaseline />\r\n            <br />\r\n            <Button\r\n                onClick={() => openFileSelector()}\r\n                variant='contained'\r\n                component='span'\r\n                fullWidth={true}\r\n            >\r\n                ДОБАВИТЬ ИЗОБРАЖЕНИЕ\r\n            </Button>\r\n            <br />\r\n{/*            {images.map((imageSrc, index) => (\r\n                <center key={index}>\r\n                    <br />\r\n                    <img src={imageSrc} alt={`Map ${index + 1}`} height={100} />\r\n                    <br />\r\n                    <Button\r\n                        onClick={() => handleImageRemove(index)}\r\n                        variant='outlined'\r\n                        color='error'\r\n                        size='medium'\r\n                    >\r\n                        Удалить\r\n                    </Button>\r\n                    <br />\r\n                </center>\r\n            ))}*/}\r\n            {inputFields.pictures && inputFields.pictures.map((imageSrc, index) => (\r\n                <center key={index}>\r\n                    <br />\r\n                    <img src={imageSrc} alt={`Map ${index + 1}`} height={100} />\r\n                    <br />\r\n                    <Button\r\n                        onClick={() => handleImageRemove(index)}\r\n                        variant='outlined'\r\n                        color='error'\r\n                        size='medium'\r\n                    >\r\n                        Удалить\r\n                    </Button>\r\n                    <br />\r\n                </center>\r\n            ))}\r\n        </ThemeProvider>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {Tabs, Tab, Typography, Box} from '@mui/material';\r\nimport Input from \"./Input\";\r\nimport Output from \"./Output\";\r\n\r\nimport Exporter2 from \"./Exporter2\";\r\nimport ImgUploader from \"./ImgUploader\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n        <div hidden={value !== index}>\r\n            {value === index && (\r\n                <Typography component=\"div\">{children}</Typography>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function TabsOne() {\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <Box sx={{width: '95%', mx: 'auto'}}>\r\n            <Tabs value={value}\r\n                  onChange={handleChange}\r\n                  centered={true}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"inherit\">\r\n                <Tab label=\"ВВОД ДАННЫХ\" />\r\n                <Tab label=\"ЗАГРУЗКА КАРТИНОК\" />\r\n                <Tab label=\"ГОТОВАЯ ТЕХНОЛОЖКА\"/>\r\n                <Tab label=\"ЭКСПОРТ\" />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0}>\r\n                <Input/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <ImgUploader/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Output/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                <Exporter2/>\r\n            </TabPanel>\r\n            </Box>\r\n        </div>\r\n    );\r\n}","import React, {createContext, useState} from 'react';\nimport './App.css';\nimport Tabs from \"./components/Tabs\";\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [inputFields, setInputFields] = useState({ });\n    const [image1, setImage1] = useState(null);\n\n  return (\n      <AppContext.Provider value={{ inputFields, setInputFields, image1, setImage1 }}>\n        <Tabs/>\n      </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}