{"version":3,"sources":["components/img/loading-loading-forever.gif","components/Input.jsx","components/Exporter2.js","components/ImgUploader.js","components/Tabs.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","darkTheme","createTheme","palette","mode","Input","_useContext","useContext","AppContext","inputFields","setInputFields","handleInputChange","setImage1","e","_e$target","target","id","value","prevState","_objectSpread","_defineProperty","console","log","handleColorInputChange","_e$target2","name","getColorObject","_useState","useState","_useState2","_slicedToArray","setMountOrNot","colorOptions","hex","find","x","React","createElement","ThemeProvider","theme","CssBaseline","FormControl","fullWidth","TextField","label","variant","number","onChange","manager","costumer","contact","folder","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DatePicker","dayjs","dateOne","date","$d","renderInput","params","Object","assign","dateTwo","etc","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","aria-controls","Typography","AccordionDetails","RadioGroup","aria-labelledby","row","materialFace","FormControlLabel","control","Radio","checked","colorFace","materialBoard","colorBoard","heightBoard","disabled","colorFrame","defaultValue","mnt","mountOrNot","address","Button","component","onClick","addressToAPI","axios","get","geocode","apikey","format","then","response","coords","data","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","mapImageUrl","mapImage","catch","error","src","alt","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Exporter","url","setUrl","dataFromContext","_useState3","_useState4","blob64","setBlob64","today","Date","month","getMonth","formattedDate","concat","getDate","getFullYear","useEffect","fetchData","_ref","_asyncToGenerator","_callee","blob","base64data","_context","fetch","blobToBase64","t0","apply","arguments","_ref2","_callee2","_context2","reader","FileReader","onloadend","readAsDataURL","_x","LightenDarkenColor","col","amt","usePound","num","parseInt","r","b","g","toString","colorBoardLight","colorFrameLight","colorFrameDark","docDefinition","pageSize","pageOrientation","pageMargins","content","svg","alignment","text","columnGap","columns","bold","toLocaleDateString","image","width","margin","pictures","map","imageSrc","index","defaultStyle","font","fontSize","URL","revokeObjectURL","pdfMake","createPdf","getBlob","createObjectURL","download","className","style","height","vfs","pdfFonts","fonts","NimbusSans","normal","italics","bolditalics","Montserrat","ImgUploader","_useFilePicker","useFilePicker","readAs","accept","multiple","limitFilesConfig","max","maxFileSize","imageSizeRestrictions","maxHeight","maxWidth","minHeight","minWidth","onFilesSuccessfulySelected","filesContent","images","newImages","fileContent","setTimeout","_useFilePicker2","openFileSelector","_useFilePicker2$","loading","errors","load","indexToRemove","updatedPictures","filter","_","color","size","TabPanel","props","children","hidden","TabsOne","setValue","Box","sx","mx","Tabs","event","newValue","centered","indicatorColor","textColor","Tab","Exporter2","createContext","App","image1","window","onbeforeunload","Provider","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ced5b644.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-loading-forever.ed2c4fc1.gif\";","import React, {useContext} from 'react';\r\nimport {ThemeProvider, createTheme} from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    RadioGroup,\r\n    Radio,\r\n    TextField, Accordion, AccordionSummary, Typography, AccordionDetails, Grid, Box,\r\n} from \"@mui/material\";\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {useState} from \"react\";\r\nimport 'dayjs/locale/ru';\r\nimport dayjs from \"dayjs\";\r\nimport {AppContext} from \"../App\";\r\nimport axios from \"axios\";\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        mode: \"dark\",\r\n    }\r\n});\r\n\r\nfunction Input() {\r\n    const {inputFields, setInputFields, setImage1} = useContext(AppContext);\r\n//добавление в контекст\r\n    const handleInputChange = (e) => {\r\n        const {id, value} = e.target;\r\n        setInputFields((prevState) => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }));\r\n        console.log(inputFields)\r\n    };\r\n//добавление цвета в контекст\r\n    const handleColorInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setInputFields((prevState) => ({\r\n            ...prevState,\r\n            [name]: getColorObject(value) // использование функции getColorObject\r\n        }));\r\n        console.log(inputFields);\r\n    };\r\n\r\n//добавление даты в контекст\r\n    const handleDateOneChange = (date) => {\r\n        setInputFields(prevState => ({\r\n            ...prevState,\r\n            dateOne: date.$d\r\n        }));\r\n    };\r\n    const handleDateTwoChange = (date) => {\r\n        setInputFields(prevState => ({\r\n            ...prevState,\r\n            dateTwo: date.$d\r\n        }));\r\n    };\r\n//состояние монтажа\r\n    const [mountOrNot, setMountOrNot] = useState('');\r\n    const handleMountOrNotChange = (mnt) => {\r\n        setMountOrNot(mnt.target.value);\r\n    };\r\n//Запрос координат и карты по ним\r\n    const getCoords = () => {\r\n        const addressToAPI = inputFields.address;\r\n        axios\r\n            .get('https://geocode-maps.yandex.ru/1.x/', {\r\n                params: {\r\n                    geocode: addressToAPI,\r\n                    apikey: '55c8816a-1c05-42cd-8e95-1066282e5eaf',\r\n                    format: 'json',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                const coords = response.data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(\" \");\r\n                const mapImageUrl = `https://static.maps.2gis.com/1.0?zoom=14&amp;size=600,350&amp;markers=` + coords[0] + `,` + coords[1];\r\n                setInputFields(prevState => ({\r\n                    ...prevState,\r\n                    mapImage: mapImageUrl\r\n                }));\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error getting coordinates:', error);\r\n            });\r\n    };\r\n    /*Палитра*/\r\n    const colorOptions = [\r\n        {hex: \"#000000\", name: \"Черный\"},\r\n        {hex: \"#FCFCFC\", name: \"Белый\"},\r\n        {hex: \"#D60000\", name: \"Красный\"},\r\n        {hex: \"#FF4F00\", name: \"Оранжевый\"},\r\n        {hex: \"#228822\", name: \"Темно зеленый\"},\r\n        {hex: \"#65E218\", name: \"Зеленый\"},\r\n        {hex: \"#212483\", name: \"Синий\"},\r\n        {hex: \"#1D8FD7\", name: \"Голубой\"},\r\n        {hex: \"#FFF729\", name: \"Желтый\"},\r\n        {hex: \"#5D301D\", name: \"Коричневый\"},\r\n        {hex: \"#E6E6E6\", name: \"Серебро\"},\r\n        {hex: \"#CCCCCC\", name: \"Шлифованый алюминий\"}\r\n    ];\r\n    const getColorObject = (hex) => colorOptions.find(x => x.hex === hex);\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <CssBaseline/>\r\n            <br/>\r\n            <FormControl fullWidth>\r\n                {/* тут основные данные*/}\r\n                <TextField id=\"number\" label=\"Номер\" variant=\"outlined\" value={inputFields.number}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"manager\" label=\"Менеджер\" variant=\"outlined\" value={inputFields.manager}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"costumer\" label=\"Заказчик\" variant=\"outlined\" value={inputFields.costumer}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"contact\" label=\"Контакты\" variant=\"outlined\" value={inputFields.contact}\r\n                           onChange={handleInputChange}/><br/>\r\n                <TextField id=\"folder\" label=\"Путь к папке\" variant=\"outlined\" value={inputFields.folder}\r\n                           onChange={handleInputChange}/><br/>\r\n                {/*добавление даты*/}\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ru\">\r\n                    <DatePicker\r\n                        label=\"Дата составления заявки\"\r\n                        id=\"dateOne\"\r\n                        value={dayjs(inputFields.dateOne)}\r\n                        onChange={handleDateOneChange}\r\n                        renderInput={(params) => <TextField {...params} id=\"dateOne-input\"/>}\r\n                    />\r\n                </LocalizationProvider><br/>\r\n                {/*добавление даты дедлайна*/}\r\n                <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ru\">\r\n                    <DatePicker\r\n                        label=\"Дедлайн\"\r\n                        id=\"dateTwo\"\r\n                        value={dayjs(inputFields.dateTwo)}\r\n                        onChange={handleDateTwoChange}\r\n                        renderInput={(params) => <TextField {...params} id=\"dateTwo-input\"/>}\r\n                    />\r\n                </LocalizationProvider><br/>\r\n                {/*добавление примечания*/}\r\n                <TextField id=\"etc\" label=\"Примечания\" variant=\"outlined\" value={inputFields.etc}\r\n                           onChange={handleInputChange}/><br/>\r\n                {/*Тут выбираем материал лица*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Материал лицевой поверхности</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.materialFace}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"Жидкий акрил\"\r\n                                control={<Radio id='materialFace'/>}\r\n                                checked={inputFields.materialFace == \"Жидкий акрил\"}\r\n                                label=\"Жидкий акрил\"/>\r\n                            <FormControlLabel\r\n                                value=\"Молочный акрил\"\r\n                                control={<Radio id='materialFace'/>}\r\n                                checked={inputFields.materialFace == \"Молочный акрил\"}\r\n                                label=\"Молочный акрил\"/>\r\n                            <FormControlLabel\r\n                                value=\"Баннер\"\r\n                                control={<Radio id='materialFace'/>}\r\n                                checked={inputFields.materialFace == \"Баннер\"}\r\n                                label=\"Баннер\"/>\r\n                            <FormControlLabel\r\n                                value=\"ПВХ\"\r\n                                control={<Radio id='materialFace'/>}\r\n                                checked={inputFields.materialFace == \"ПВХ\"}\r\n                                label=\"ПВХ\"/>\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Тут выбираем цвет лица*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Цвет лицевой поверхности</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            name=\"colorFace\"\r\n                            value={inputFields.colorFace ? inputFields.colorFace.hex : ''}\r\n                            onChange={handleColorInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"#000000\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#000000\"}\r\n                                label=\"Черный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FCFCFC\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#FCFCFC\"}\r\n                                label=\"Белый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#212483\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#212483\"}\r\n                                label=\"Синий\"/>\r\n                            <FormControlLabel\r\n                                value=\"#1D8FD7\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#1D8FD7\"}\r\n                                label=\"Голубой\"/>\r\n                            <FormControlLabel\r\n                                value=\"#D60000\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#D60000\"}\r\n                                label=\"Красный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FF4F00\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#FF4F00\"}\r\n                                label=\"Оранжевый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#65E218\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#65E218\"}\r\n                                label=\"Зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#228822\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#228822\"}\r\n                                label=\"Темно зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FFF729\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#FFF729\"}\r\n                                label=\"Желтый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#5D301D\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFace && inputFields.colorFace.hex == \"#5D301D\"}\r\n                                label=\"Коричневый\"/>\r\n                        </RadioGroup>\r\n                        {/*<RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.colorFace}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value={{hex: \"#000000\", name: \"Черный\"}}\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace.hex == \"#000000\"}\r\n                                label=\"Черный\"/>\r\n                            <FormControlLabel\r\n                                value={{hex: \"#DDDDDD\", name: \"Белый\"}}\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace.hex == \"#DDDDDD\"}\r\n                                label=\"Белый\"/>\r\n                            <FormControlLabel\r\n                                value={{hex: \"#FF0000\", name: \"Красный\"}}\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace.hex == \"#FF0000\"}\r\n                                label=\"Красный\"/>\r\n                            <FormControlLabel\r\n                                value={{hex: \"#008000\", name: \"Зеленый\"}}\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace.hex == \"#008000\"}\r\n                                label=\"Зеленый\"/>\r\n                            <FormControlLabel\r\n                                value={{hex: \"#00008f\", name: \"Синий\"}}\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace.hex == \"#00008f\"}\r\n                                label=\"Синий\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"another\"\r\n                                control={<Radio id='colorFace'/>}\r\n                                checked={inputFields.colorFace == \"another\"}\r\n                                disabled={true}\r\n                                label=\"Другой\"\r\n                            />\r\n                        </RadioGroup>*/}\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Тут выбираем материал борта*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Материал борта</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.materialBoard}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"Алюминий 0,6мм\"\r\n                                control={<Radio id='materialBoard'/>}\r\n                                checked={inputFields.materialBoard == \"Алюминий 0,6мм\"}\r\n                                label=\"Алюминий 0,6мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"Алюминий 2мм\"\r\n                                control={<Radio id='materialBoard'/>}\r\n                                checked={inputFields.materialBoard == \"Алюминий 2мм\"}\r\n                                label=\"Алюминий 2мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"ПВХ 5мм\"\r\n                                control={<Radio id='materialBoard'/>}\r\n                                checked={inputFields.materialBoard == \"ПВХ 5мм\"}\r\n                                label=\"ПВХ 5мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"Алюминиевый композит\"\r\n                                control={<Radio id='materialBoard'/>}\r\n                                checked={inputFields.materialBoard == \"Алюминиевый композит\"}\r\n                                label=\"Алюминиевый композит\"/>\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Тут выбираем цвет борта*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Цвет борта</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            name=\"colorBoard\"\r\n                            value={inputFields.colorBoard ? inputFields.colorBoard.hex : ''}\r\n                            onChange={handleColorInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"#000000\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#000000\"}\r\n                                label=\"Черный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FCFCFC\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#FCFCFC\"}\r\n                                label=\"Белый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#212483\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#212483\"}\r\n                                label=\"Синий\"/>\r\n                            <FormControlLabel\r\n                                value=\"#1D8FD7\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#1D8FD7\"}\r\n                                label=\"Голубой\"/>\r\n                            <FormControlLabel\r\n                                value=\"#D60000\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#D60000\"}\r\n                                label=\"Красный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FF4F00\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#FF4F00\"}\r\n                                label=\"Оранжевый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#65E218\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#65E218\"}\r\n                                label=\"Зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#228822\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#228822\"}\r\n                                label=\"Темно зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FFF729\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#FFF729\"}\r\n                                label=\"Желтый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#5D301D\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#5D301D\"}\r\n                                label=\"Коричневый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#E6E6E6\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#E6E6E6\"}\r\n                                label=\"Серебро\"/>\r\n                            <FormControlLabel\r\n                                value=\"#CCCCCC\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorBoard && inputFields.colorBoard.hex == \"#CCCCCC\"}\r\n                                label=\"Шлифованый алюминий\"/>\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Ширина борта*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Ширина борта</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            value={inputFields.heightBoard}\r\n                            onChange={handleInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"20 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"20 мм\"}\r\n                                label=\"20 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"40 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"40 мм\"}\r\n                                label=\"40 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"60 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"60 мм\"}\r\n                                label=\"60 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"80 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"80 мм\"}\r\n                                label=\"80 мм\"/>\r\n                            <FormControlLabel\r\n                                value=\"100 мм\"\r\n                                control={<Radio id='heightBoard'/>}\r\n                                checked={inputFields.heightBoard == \"100 мм\"}\r\n                                label=\"100 мм\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"another\"\r\n                                control={<Radio id='colorBoard'/>}\r\n                                checked={inputFields.heightBoard == \"another\"}\r\n                                disabled={true}\r\n                                label=\"Другой\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {/*Тут выбираем цвет рамы*/}\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Цвет рамы</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            name=\"colorFrame\"\r\n                            value={inputFields.colorFrame ? inputFields.colorFrame.hex : ''}\r\n                            onChange={handleColorInputChange}>\r\n                            <FormControlLabel\r\n                                value=\"#000000\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#000000\"}\r\n                                label=\"Черный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FCFCFC\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#FCFCFC\"}\r\n                                label=\"Белый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#212483\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#212483\"}\r\n                                label=\"Синий\"/>\r\n                            <FormControlLabel\r\n                                value=\"#1D8FD7\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#1D8FD7\"}\r\n                                label=\"Голубой\"/>\r\n                            <FormControlLabel\r\n                                value=\"#D60000\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#D60000\"}\r\n                                label=\"Красный\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FF4F00\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#FF4F00\"}\r\n                                label=\"Оранжевый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#65E218\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#65E218\"}\r\n                                label=\"Зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#228822\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#228822\"}\r\n                                label=\"Темно зеленый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#FFF729\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#FFF729\"}\r\n                                label=\"Желтый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#5D301D\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#5D301D\"}\r\n                                label=\"Коричневый\"/>\r\n                            <FormControlLabel\r\n                                value=\"#E6E6E6\" // использование hex значения\r\n                                control={<Radio />}\r\n                                checked={inputFields.colorFrame && inputFields.colorFrame.hex == \"#E6E6E6\"}\r\n                                label=\"Серебро\"/>\r\n                        </RadioGroup>\r\n                    </AccordionDetails>\r\n                </Accordion><br/>\r\n                {/*Монтаж или что вообще*/}\r\n                <form onChange={handleInputChange} >\r\n                        <RadioGroup\r\n                            aria-labelledby=\"type-label\"\r\n                            row\r\n                            defaultValue=\"mount\"\r\n\r\n                            onChange={handleMountOrNotChange}>\r\n                            <FormControlLabel\r\n                                value=\"mount\"\r\n                                control={<Radio id='mountOrNot'/>}\r\n                                checked={inputFields.mountOrNot == \"mount\"}\r\n                                label=\"Монтаж\"/>\r\n                            <FormControlLabel\r\n                                value=\"send\"\r\n                                control={<Radio id='mountOrNot'/>}\r\n                                checked={inputFields.mountOrNot == \"send\"}\r\n                                label=\"Отправка\"/>\r\n                            <FormControlLabel\r\n                                value=\"self\"\r\n                                control={<Radio id='mountOrNot'/>}\r\n                                checked={inputFields.mountOrNot == \"self\"}\r\n                                label=\"Самовывоз\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </form>\r\n\r\n                {inputFields.mountOrNot == \"mount\" ? (\r\n                    <div>\r\n                        <TextField id=\"address\" label=\"Монтаж по адресу\" variant=\"outlined\" value={inputFields.address}\r\n                                   onChange={handleInputChange} fullWidth={true}/>\r\n                        <br/>\r\n                        <Button variant=\"contained\" component=\"span\" fullWidth={true} onClick={getCoords}>\r\n                            ПОКАЗАТЬ КАРТУ\r\n                        </Button>\r\n                        <br/>\r\n                        <div>\r\n                            <center>{inputFields.mapImage && <img src={inputFields.mapImage} alt=\"Map\"/>}</center>\r\n                        </div>\r\n                    </div>\r\n                ) : inputFields.mountOrNot == \"send\" ? (\r\n                    <TextField id=\"address\" label=\"Отправить по адресу\" variant=\"outlined\" value={inputFields.address}\r\n                               onChange={handleInputChange}/>\r\n                ) : inputFields.mountOrNot == \"self\" ? (\r\n                    \"Заказчик заберет сам\"\r\n                ) : (\r\n                    \"Выберите монтаж / отправка / самовывоз\"\r\n                )}\r\n                <br/><br/><br/><br/><br/>\r\n            </FormControl>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, {useContext} from 'react';\r\nimport './styles.css'\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {AppContext} from \"../App\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\r\nimport {Button} from \"@mui/material\";\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\npdfMake.fonts = {\r\n    NimbusSans: {\r\n        normal: \"NimbusSanL-Reg.otf\",\r\n        bold: \"NimbusSanL-Bol.otf\",\r\n        italics: \"NimbusSanL-RegIta.otf\",\r\n        bolditalics: \"NimbusSanL-BolIta.otf\"\r\n    },\r\n    Montserrat: {\r\n        normal: \"Montserrat-Regular.ttf\",\r\n        bold: \"Montserrat-Bold.ttf\",\r\n        italics: \"Montserrat-Italic.ttf\"\r\n    }\r\n};\r\n\r\nexport default function Exporter() {\r\n    const [url, setUrl] = useState(null);\r\n    const dataFromContext = useContext(AppContext);\r\n    const [blob64, setBlob64] = useState(\"\");\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const formattedDate = `${today.getDate()}.${month<10?'0'+month:month}.${today.getFullYear()}`;\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n        },\r\n    });\r\n\r\n    //Map to blob\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(dataFromContext.inputFields.mapImage);\r\n                const blob = await response.blob();\r\n                const base64data = await blobToBase64(blob);\r\n                setBlob64(base64data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        console.log(dataFromContext.inputFields.mapImage)\r\n        fetchData();\r\n    }, []);\r\n\r\n    const blobToBase64 = async (blob) => {\r\n        return new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const base64data = reader.result;\r\n                resolve(base64data);\r\n            };\r\n            reader.readAsDataURL(blob);\r\n        });\r\n    };\r\n\r\n    console.log(\"blob64:\", blob64);\r\n\r\n    const dataTyper = (data) => {\r\n        return data.slice(0, 14);\r\n    }\r\n\r\n    //Осветлительно-затемняющий функционал\r\n    function LightenDarkenColor(col, amt) {\r\n        var usePound = false;\r\n        if (col[0] == \"#\") {\r\n            col = col.slice(1);\r\n            usePound = true;\r\n        }\r\n        let num = parseInt(col, 16);\r\n        let r = (num >> 16) + amt;\r\n        if (r > 255) r = 255;\r\n        else if  (r < 0) r = 0;\r\n        let b = ((num >> 8) & 0x00FF) + amt;\r\n        if (b > 255) b = 255;\r\n        else if  (b < 0) b = 0;\r\n        let g = (num & 0x0000FF) + amt;\r\n        if (g > 255) g = 255;\r\n        else if (g < 0) g = 0;\r\n        return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n    }\r\n\r\n    let colorBoard = dataFromContext.inputFields.colorBoard.hex ? dataFromContext.inputFields.colorBoard.hex : '#000000';\r\n    let colorBoardLight = LightenDarkenColor(colorBoard, 70);\r\n    let colorFrame = dataFromContext.inputFields.colorFrame.hex ? dataFromContext.inputFields.colorFrame.hex : '#000000';\r\n    let colorFrameLight = LightenDarkenColor(colorFrame, 70);\r\n    let colorFrameDark = LightenDarkenColor(colorFrame, -70);\r\n    let colorFace = dataFromContext.inputFields.colorFace.hex ? dataFromContext.inputFields.colorFace.hex : '#FFFFFF';\r\n\r\n    const docDefinition = {\r\n        pageSize: \"A4\",\r\n        pageOrientation: \"portrait\",\r\n        pageMargins: [40, 20, 40, 60],\r\n        content: [\r\n            //Логотип\r\n            {\r\n                svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" height=\"26\" viewBox=\"0 0 150 26\" fill=\"none\">\\n' +\r\n                    '<path d=\"M11.8516 26H0.267578V0.300781H11.8516V4.43164H5.04883V10.5488H11.3594V14.6973H5.04883V21.8164H11.8516V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M30.3613 26H25.3867L21.7129 16.7891L18.3027 26H13.3281L19.1992 12.6406L13.7676 0.300781H18.584L21.9766 8.75586L24.9121 0.300781H29.9219L24.4902 12.8516L30.3613 26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M40.5391 26H35.7754V4.50195H30.8535V0.300781H45.4609V4.50195H40.5391V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M59.8047 26H48.2207V0.300781H59.8047V4.43164H53.002V10.5488H59.3125V14.6973H53.002V21.8164H59.8047V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M68.3301 15.998V26H63.5488V0.300781H69.8066C72.4551 0.300781 74.4062 0.927734 75.6602 2.18164C76.9258 3.43555 77.5586 5.35156 77.5586 7.92969C77.5586 11.1758 76.4629 13.4434 74.2715 14.7324L79.2109 26H74.0957L70.0352 15.998H68.3301ZM68.3301 11.8848H69.5605C70.6855 11.8848 71.4941 11.5684 71.9863 10.9355C72.4785 10.291 72.7246 9.33594 72.7246 8.07031C72.7246 6.75781 72.4609 5.82617 71.9336 5.27539C71.418 4.71289 70.6152 4.43164 69.5254 4.43164H68.3301V11.8848Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M99.5488 26H93.7129L85.7676 7.38477H85.5391C85.832 8.80273 85.9785 10.3262 85.9785 11.9551V26H81.5488V0.300781H87.4199L95.2949 18.7227H95.4883C95.2656 17.4922 95.1543 16.0273 95.1543 14.3281V0.300781H99.5488V26Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M116.248 26L114.771 19.5137H108.074L106.598 26H101.816L108.18 0.195312H114.666L121.047 26H116.248ZM113.875 15.2773L112.504 9.30078C112.422 8.9375 112.234 8.0293 111.941 6.57617C111.66 5.11133 111.49 4.13281 111.432 3.64062C111.279 4.64844 111.086 5.76172 110.852 6.98047C110.617 8.1875 110.008 10.9531 109.023 15.2773H113.875Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M123.314 26V0.300781H128.096V21.8164H134.723V26H123.314Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '<path d=\"M137.799 26V0.300781H142.58V21.8164H149.207V26H137.799Z\" fill=\"#0038E6\"/>\\n' +\r\n                    '</svg>', alignment: 'left'\r\n            },\r\n            {text: '\\n'},\r\n            //Блок с основной информацией и картой\r\n            {\r\n                //alignment: 'justify',\r\n                columnGap: 0,\r\n                columns: [\r\n                    {\r\n                        //Номер\r\n                        text:\r\n                        [dataFromContext.inputFields.number && {text:\r\n                                [`Номер: `, {text: `${dataFromContext.inputFields.number}\\n`, bold: true}]},\r\n                            //Менеджер\r\n                            dataFromContext.inputFields.manager && {text:\r\n                                    [`Менеджер: `, {text: `${dataFromContext.inputFields.manager}\\n`, bold: true}]},\r\n                        //Заказчик\r\n                        dataFromContext.inputFields.costumer && {text:\r\n                                [`Заказчик: `, {text: `${dataFromContext.inputFields.costumer}\\n`, bold: true}]},\r\n                        //Контакт\r\n                        dataFromContext.inputFields.contact && {text:\r\n                                [`Контакт: `, {text: `${dataFromContext.inputFields.contact}\\n`, bold: true}]},\r\n                            //Путь к папке\r\n                            dataFromContext.inputFields.folder && {text:\r\n                                    [`Путь к папке: `, {text: `${dataFromContext.inputFields.folder}\\n`, bold: true}]},\r\n                        //Дата составления заявки\r\n                            dataFromContext.inputFields.dateOne\r\n                            ? {text: [`Дата составления заявки: `, {text: `${dataFromContext.inputFields.dateOne.toLocaleDateString()}`, bold: true}]}\r\n                            : {text: [`Дата составления заявки: `, {text: `${formattedDate}`, bold: true}]},'\\n',\r\n                        //Дэдлайн\r\n                            dataFromContext.inputFields.dateTwo\r\n                            ? {text: [`Дэдлайн: `, {text: `${dataFromContext.inputFields.dateTwo.toLocaleDateString()}`, bold: true}]}\r\n                            : {text: [`Дэдлайн: `, {text: `не определен`, bold: true}]},'\\n',\r\n                        //Адрес\r\n                        dataFromContext.inputFields.address && {text:\r\n                                [`Адрес: `, {text: `${dataFromContext.inputFields.address}`, bold: true}]}]\r\n                    },\r\n                        //Карта\r\n                        dataTyper(blob64) == \"data:text/html\" ? '' : {image: blob64, width: 300 , alignment: 'center'},\r\n                ]\r\n            },\r\n            //Разделитель\r\n            {\r\n                svg: '<svg width=\"515\" height=\"3\" xmlns=\"http://www.w3.org/2000/svg\">\\n' +\r\n                '<rect width=\"515\" height=\"3\" fill=\"#0038E6\"/>\\n' +\r\n                '</svg>\\n', margin: [0,0,0,0]\r\n            },\r\n            '\\n',\r\n            //Блок описания вывески\r\n            {\r\n                alignment: 'justify',\r\n                columns: [\r\n                    //Превью буквы\r\n                    {\r\n                        svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" width=\"150px\" height=\"150px\" version=\"1.1\" style=\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd\" viewBox=\"0 0 303.36 303.36\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xodm=\"http://www.corel.com/coreldraw/odm/2003\">\\n'+\r\n                            '<defs>\\n'+\r\n                            '<style type=\"text/css\">\\n'+\r\n                            '<![CDATA[\\n'+\r\n                            '.str0 {stroke:#2B2A29;stroke-width:0.76;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22.9256}\\n'+\r\n                            ']]>\\n'+\r\n                            '</style>\\n'+\r\n                            '</defs>\\n'+\r\n                            '<g id=\"Layer_x0020_1\">\\n'+\r\n                            '<metadata id=\"CorelCorpID_0Corel-Layer\"/>\\n'+\r\n                            '<g id=\"_2375251128288\">\\n'+\r\n                            `<polygon fill='${colorFrameLight}' class=\"str0\" points=\"0.38,250.18 296.34,213.52 302.98,217.64 7.02,254.3 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,265.09 7.02,264.27 7.02,269.21 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,250.18 7.02,254.3 7.02,264.27 0.38,265.09 \"/>\\n`+\r\n                            `<polygon fill='${colorFrame}' class=\"str0\" points=\"7.02,254.3 302.98,217.64 302.98,232.55 7.02,269.21 \"/>\\n`+\r\n                            `<polygon fill='${colorFrame}' class=\"str0\" points=\"7.02,59.55 302.98,22.89 302.98,37.8 7.02,74.47 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameLight}' class=\"str0\" points=\"0.38,55.43 296.34,18.77 302.98,22.89 7.02,59.55 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,70.34 7.02,69.52 7.02,74.47 \"/>\\n`+\r\n                            `<polygon fill='${colorFrameDark}' class=\"str0\" points=\"0.38,55.43 7.02,59.55 7.02,69.52 0.38,70.34 \"/>\\n`+\r\n                            `<polygon fill='${colorBoard}' class=\"str0\" points=\"213.19,214.9 190.74,198.22 212.38,261.15 235.27,279.12 \"/>\\n`+\r\n                            `<polygon fill='${colorBoardLight}' class=\"str0\" points=\"208.28,13.02 185.93,0.38 104.98,10.41 125.67,23.25 \"/>\\n`+\r\n                            `<polygon fill='${colorBoard}' class=\"str0\" points=\"125.67,23.25 104.98,10.41 23.62,284.54 42.66,302.98 \"/>\\n`+\r\n                            `<polygon fill='${colorBoard}' class=\"str0\" points=\"167.38,64.88 145.85,51.2 178.32,156.27 200.51,172.1 \"/>\\n`+\r\n                            `<polygon fill='${colorBoardLight}' class=\"str0\" points=\"200.51,172.1 178.32,156.27 114.19,164.22 135.08,180.2 \"/>\\n`+\r\n                            `<path fill='${colorFace}' class=\"str0\" d=\"M101.95 295.63l20.86 -69.54 90.37 -11.19 22.09 64.22 58.07 -7.19 -85.06 -258.91 -82.61 10.23 -83.01 279.73 59.29 -7.35zm65.43 -230.75l33.13 107.22 -65.43 8.1 32.3 -115.32z\"/>\\n`+\r\n                            '</g>\\n'+\r\n                            '</g>\\n'+\r\n                            '</svg>',\r\n                        alignment: 'center'\r\n                    },\r\n                    //Характеристики вывески\r\n                    {\r\n                        text:\r\n                                [\r\n                                    //Материал лица\r\n                                    dataFromContext.inputFields.materialFace && {text:\r\n                                            [`Материал лица: `, {text: `${dataFromContext.inputFields.materialFace}\\n`, bold: true}]},\r\n                                    //Цвет лица\r\n                                    dataFromContext.inputFields.colorFace && {text:\r\n                                            [`Цвет лица: `, {text: `${dataFromContext.inputFields.colorFace.name}\\n`, bold: true}]},\r\n                                    //Материал борта\r\n                                    dataFromContext.inputFields.materialBoard && {text:\r\n                                            [`Материал борта: `, {text: `${dataFromContext.inputFields.materialBoard}\\n`, bold: true}]},\r\n                                    //Ширина борта\r\n                                    dataFromContext.inputFields.heightBoard && {text:\r\n                                            [`Ширина борта: `, {text: `${dataFromContext.inputFields.heightBoard}\\n`, bold: true}]},\r\n                                    //Цвет борта\r\n                                    dataFromContext.inputFields.colorBoard && {text:\r\n                                            [`Цвет борта: `, {text: `${dataFromContext.inputFields.colorBoard.name}\\n`, bold: true}]},\r\n                                    //Цвет рамы\r\n                                    dataFromContext.inputFields.colorFrame && {text:\r\n                                            [`Цвет рамы: `, {text: `${dataFromContext.inputFields.colorFrame.name}\\n`, bold: true}]},\r\n                                    //Примечания\r\n                                    dataFromContext.inputFields.etc && {text:\r\n                                            [`Примечания: `, {text: `${dataFromContext.inputFields.etc}\\n`, bold: true}]},\r\n                                ]\r\n                    }\r\n                ]\r\n            },\r\n            '\\n',\r\n            //картника с привязкой или визуализацией\r\n            dataFromContext.inputFields.pictures && {text: `Габариты, визуализация:`, bold: true},\r\n            //dataFromContext.inputFields.pictures && {image:\r\n                //dataFromContext.inputFields.pictures, width: 350 , alignment: 'center'},\r\n            dataFromContext.inputFields.pictures && dataFromContext.inputFields.pictures.map((imageSrc, index) => (\r\n                {image: imageSrc, width: 350 , alignment: 'center'}\r\n                ))\r\n        ],\r\n        defaultStyle: {\r\n            font: \"Montserrat\",\r\n            fontSize: 10,\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (url !== null) {\r\n                URL.revokeObjectURL(url);\r\n            }\r\n        };\r\n    }, [url]);\r\n\r\n    const create = () => {\r\n        const pdfDocGenerator = pdfMake.createPdf(docDefinition);\r\n        pdfDocGenerator.getBlob((blob) => {\r\n            const url = URL.createObjectURL(blob);\r\n            setUrl(url);\r\n        });\r\n    };\r\n\r\n    const download = () => {\r\n        const pdfDocGenerator = pdfMake.createPdf(docDefinition);\r\n        pdfDocGenerator.download();\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <CssBaseline />\r\n            <br />\r\n            <Button\r\n                onClick={create}\r\n                variant='contained'\r\n                component='span'\r\n                fullWidth={true}\r\n                disabled={!blob64}\r\n            >\r\n                ПРЕДПРОСМОТР\r\n            </Button>\r\n            <br/>\r\n            <Button\r\n                onClick={download}\r\n                variant='contained'\r\n                component='span'\r\n                fullWidth={true}\r\n                disabled={!blob64}\r\n            >\r\n                СКАЧАТЬ\r\n            </Button>\r\n            <br/>\r\n        <div className=\"App\">\r\n            {url && (\r\n                <div>\r\n                    <object\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100vh\"\r\n                        }}\r\n                        data={url}\r\n                        type=\"application/pdf\"\r\n                    >\r\n                        <embed src={url} type=\"application/pdf\" />\r\n                    </object>\r\n                </div>\r\n            )}\r\n        </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\n// Hook\r\nfunction usePrevious(value) {\r\n    // The ref object is a generic container whose current property is mutable ...\r\n    // ... and can hold any value, similar to an instance property on a class\r\n    const ref = useRef();\r\n\r\n    // Store current value in ref\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n\r\n    // Return previous value (happens before update in useEffect above)\r\n    return ref.current;\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useFilePicker } from 'use-file-picker';\r\nimport { AppContext } from '../App';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { Button } from '@mui/material';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport load from './img/loading-loading-forever.gif';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n    },\r\n});\r\nexport default function ImgUploader() {\r\n    const { inputFields, setInputFields } = useContext(AppContext);\r\n\r\n    const handleInputChange = (images) => {\r\n        const newImages = images.filesContent.map((fileContent) => fileContent.content);\r\n        setInputFields((prevState) => ({ ...prevState, pictures: prevState.pictures.concat(newImages) }));\r\n        setTimeout(() => {\r\n            console.log(inputFields);\r\n        }, 1000);\r\n    };\r\n\r\n    const handleImageRemove = (indexToRemove) => {\r\n        setInputFields((prevState) => {\r\n            const updatedPictures = prevState.pictures.filter((_, index) => index !== indexToRemove);\r\n            return { ...prevState, pictures: updatedPictures };\r\n        });\r\n    };\r\n\r\n    const [openFileSelector, { filesContent, loading, errors }] = useFilePicker({\r\n        readAs: 'DataURL',\r\n        accept: 'image/*',\r\n        multiple: true,\r\n        limitFilesConfig: { max: 2 },\r\n        maxFileSize: 50,\r\n        imageSizeRestrictions: {\r\n            maxHeight: 5000, // in pixels\r\n            maxWidth: 5000,\r\n            minHeight: 100,\r\n            minWidth: 100,\r\n        },\r\n        onFilesSuccessfulySelected: (filesContent) => handleInputChange(filesContent),\r\n    });\r\n\r\n    if (loading) {\r\n        return (\r\n            <ThemeProvider theme={darkTheme}>\r\n                <CssBaseline />\r\n                <center>\r\n                    <img src={load} height={200} alt='loading' />\r\n                </center>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n\r\n    if (errors.length) {\r\n        return <div>{errors}</div>;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <CssBaseline />\r\n            <br />\r\n            <Button\r\n                onClick={() => openFileSelector()}\r\n                variant='contained'\r\n                component='span'\r\n                fullWidth={true}\r\n            >\r\n                ДОБАВИТЬ ИЗОБРАЖЕНИЕ\r\n            </Button>\r\n            <br />\r\n\r\n            {inputFields.pictures && inputFields.pictures.map((imageSrc, index) => (\r\n                <center key={index}>\r\n                    <br />\r\n                    <img src={imageSrc} alt={`Map ${index + 1}`} height={100} />\r\n                    <br />\r\n                    <Button\r\n                        onClick={() => handleImageRemove(index)}\r\n                        variant='outlined'\r\n                        color='error'\r\n                        size='medium'\r\n                    >\r\n                        Удалить\r\n                    </Button>\r\n                    <br />\r\n                </center>\r\n            ))}\r\n        </ThemeProvider>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {Tabs, Tab, Typography, Box} from '@mui/material';\r\nimport Input from \"./Input\";\r\nimport Output from \"./Output\";\r\n\r\nimport Exporter2 from \"./Exporter2\";\r\nimport ImgUploader from \"./ImgUploader\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n        <div hidden={value !== index}>\r\n            {value === index && (\r\n                <Typography component=\"div\">{children}</Typography>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function TabsOne() {\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{width: '95%', mx: 'auto'}}>\r\n            <Tabs value={value}\r\n                  onChange={handleChange}\r\n                  centered={true}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"inherit\">\r\n                <Tab label=\"ЗАПОЛНИТЬ\" />\r\n                <Tab label=\"ИЗОБРАЖЕНИЯ\" />\r\n                <Tab label=\"ЭКСПОРТ\" />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0}>\r\n                <Input/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <ImgUploader/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Exporter2/>\r\n            </TabPanel>\r\n            </Box>\r\n        </div>\r\n    );\r\n}","import React, {createContext, useState} from 'react';\nimport './App.css';\nimport Tabs from \"./components/Tabs\";\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [inputFields, setInputFields] = useState({\n      pictures: [],\n      colorFace: {\n          hex: \"#FCFCFC\",\n          name: \"Белый\"\n      },\n      colorBoard: {\n          hex: \"#000000\",\n          name: \"Черный\"\n      },\n      colorFrame: {\n          hex: \"#000000\",\n          name: \"Черный\"\n      },\n  });\n    const [image1, setImage1] = useState(null);\n    window.onbeforeunload = function() {\n        return true;\n    };\n  return (\n      <AppContext.Provider value={{ inputFields, setInputFields, image1, setImage1 }}>\n        <Tabs/>\n      </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}